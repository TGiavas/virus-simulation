/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void seperateSliderChange(GSlider source, GEvent event) { //_CODE_:seperateSlider:817250:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:seperateSlider:817250:

public void startButtonClick(GButton source, GEvent event) { //_CODE_:startButton:951924:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  if (start == true){
    start = false;
    startButton.setText("Start");
    startButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  }
  else if (start == false){
    start = true;
    startButton.setText("Pause");
    startButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  }
} //_CODE_:startButton:951924:

public void infectionProbabilityChange(GSlider source, GEvent event) { //_CODE_:infectionProbabilitySlider:321271:
  println("infectionProbabilitySlider - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:infectionProbabilitySlider:321271:

public void virusMortalitySliderChange(GSlider source, GEvent event) { //_CODE_:virusMortalitySlider:338931:
  println("virusMortalitySlider - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:virusMortalitySlider:338931:

public void quarantineButtonClick(GButton source, GEvent event) { //_CODE_:quarantineButton:613173:
  println("quarantineButton - GButton >> GEvent." + event + " @ " + millis());
    if (quarantine == true){
    quarantine = false;
    quarantineButton.setText("Enable Quarantine");
    quarantineButton.setLocalColorScheme(GCScheme.RED_SCHEME);

  }
  else if (quarantine == false){
    quarantine = true;
    quarantineButton.setText("Disable Quarantine");
    quarantineButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);

  }
} //_CODE_:quarantineButton:613173:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.GOLD_SCHEME);
  G4P.setMouseOverEnabled(false);
  G4P.setDisplayFont("Cooper Black", G4P.BOLD | G4P.ITALIC, 16);
  surface.setTitle("Virus Simulation");
  healthyLabel = new GLabel(this, 1608, 89, 209, 40);
  healthyLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  healthyLabel.setText("Healthy: ");
  healthyLabel.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  healthyLabel.setOpaque(true);
  infectedLabel = new GLabel(this, 1606, 130, 210, 41);
  infectedLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  infectedLabel.setText("Infected: ");
  infectedLabel.setLocalColorScheme(GCScheme.RED_SCHEME);
  infectedLabel.setOpaque(true);
  recoveredLabel = new GLabel(this, 1607, 171, 209, 43);
  recoveredLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  recoveredLabel.setText("Recovered: ");
  recoveredLabel.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  recoveredLabel.setOpaque(true);
  deadLabel = new GLabel(this, 1606, 214, 212, 40);
  deadLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  deadLabel.setText("Dead: ");
  deadLabel.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  deadLabel.setOpaque(true);
  totalLabel = new GLabel(this, 1604, 254, 213, 43);
  totalLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  totalLabel.setText("Total: ");
  totalLabel.setOpaque(true);
  timerLabel = new GLabel(this, 1656, 19, 111, 59);
  timerLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  timerLabel.setText("Time: ");
  timerLabel.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  timerLabel.setOpaque(false);
  seperateSlider = new GSlider(this, 1607, 457, 250, 45, 10.0);
  seperateSlider.setShowValue(true);
  seperateSlider.setShowLimits(true);
  seperateSlider.setLimits(1, 0, 10);
  seperateSlider.setNumberFormat(G4P.INTEGER, 0);
  seperateSlider.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  seperateSlider.setOpaque(false);
  seperateSlider.addEventHandler(this, "seperateSliderChange");
  startButton = new GButton(this, 1682, 1006, 80, 30);
  startButton.setText("Start");
  startButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  startButton.addEventHandler(this, "startButtonClick");
  socialDistancingLabel = new GLabel(this, 1606, 436, 250, 20);
  socialDistancingLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  socialDistancingLabel.setText("Social Distancing");
  socialDistancingLabel.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  socialDistancingLabel.setOpaque(false);
  infectionProbabilityLabel = new GLabel(this, 1607, 504, 250, 20);
  infectionProbabilityLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  infectionProbabilityLabel.setText("Infection Probability");
  infectionProbabilityLabel.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  infectionProbabilityLabel.setOpaque(false);
  infectionProbabilitySlider = new GSlider(this, 1606, 525, 250, 45, 10.0);
  infectionProbabilitySlider.setShowValue(true);
  infectionProbabilitySlider.setShowLimits(true);
  infectionProbabilitySlider.setLimits(80, 0, 100);
  infectionProbabilitySlider.setNumberFormat(G4P.INTEGER, 0);
  infectionProbabilitySlider.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  infectionProbabilitySlider.setOpaque(false);
  infectionProbabilitySlider.addEventHandler(this, "infectionProbabilityChange");
  virusMortalityLabel = new GLabel(this, 1605, 573, 250, 20);
  virusMortalityLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  virusMortalityLabel.setText("Virus Mortality");
  virusMortalityLabel.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  virusMortalityLabel.setOpaque(false);
  virusMortalitySlider = new GSlider(this, 1603, 596, 250, 45, 10.0);
  virusMortalitySlider.setShowValue(true);
  virusMortalitySlider.setShowLimits(true);
  virusMortalitySlider.setLimits(10, 0, 100);
  virusMortalitySlider.setNumberFormat(G4P.INTEGER, 0);
  virusMortalitySlider.setLocalColorScheme(GCScheme.RED_SCHEME);
  virusMortalitySlider.setOpaque(false);
  virusMortalitySlider.addEventHandler(this, "virusMortalitySliderChange");
  quarantineButton = new GButton(this, 1666, 762, 121, 70);
  quarantineButton.setText("Enable Quarantine");
  quarantineButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  quarantineButton.addEventHandler(this, "quarantineButtonClick");
}

// Variable declarations 
// autogenerated do not edit
GLabel healthyLabel; 
GLabel infectedLabel; 
GLabel recoveredLabel; 
GLabel deadLabel; 
GLabel totalLabel; 
GLabel timerLabel; 
GSlider seperateSlider; 
GButton startButton; 
GLabel socialDistancingLabel; 
GLabel infectionProbabilityLabel; 
GSlider infectionProbabilitySlider; 
GLabel virusMortalityLabel; 
GSlider virusMortalitySlider; 
GButton quarantineButton; 
